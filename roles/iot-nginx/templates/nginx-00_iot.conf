upstream hass   { server 127.0.0.1:8123 fail_timeout=0; }
upstream nodered   { server 127.0.0.1:1880 fail_timeout=0; }

server {
    listen [::]:80 default_server deferred ipv6only=off;

    {% if letsencrypt_email is defined %}
    server_name {{ domain_name }};

    location /.well-known/acme-challenge {
        root /var/www/letsencrypt;
        try_files $uri $uri/ =404;
    }

    location / {
        rewrite ^ https://{{ domain_name }}$request_uri? permanent;
    }
    {% else %}
        location / {
          proxy_pass http://hass/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
        }

        location /nodered {
          proxy_pass http://nodered/nodered;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
    {% endif %}
}

{% if letsencrypt_email is defined %}
server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # drop SSLv3 (POODLE vulnerabilit$
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  root /var/www/{{ domain_name }};

  index index.html index.htm index.nginx-debian.html;

  server_name {{ domain_name }}

  location / {
    proxy_pass http://hass/;
  }

  location /node-red {
    proxy_pass http://nred/;
  }

  location ~ /\.ht {
    deny all;
  }

}
{% endif %}
